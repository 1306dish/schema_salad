- name: "Schema_Annotations_for_Linked_Avro_Data"
  type: doc
  doc: |
    Work in progress.
  jsonldPrefixes:
    - { prefix: sld, namespace: "https://w3id.org/cwl/salad#" }
    - { prefix: avro,  namespace: "https://w3id.org/cwl/avro#" }
    - { prefix: dct,   namespace: "http://purl.org/dc/terms/" }
    - { prefix: rdf,   namespace: "http://www.w3.org/1999/02/22-rdf-syntax-ns#" }
    - { prefix: rdfs,  namespace: "http://www.w3.org/2000/01/rdf-schema#" }
  jsonldVocab: sld

- name: "Datatype"
  type: enum
  symbols:
    - "#null"
    - "#boolean"
    - "#int"
    - "#long"
    - "#float"
    - "#double"
    - "#bytes"
    - "#string"
    - "#record"
    - "#enum"
    - "#array"
    - "#doc"
    - "#Any"
  doc: |
   Salad data types are based on Avro schema declarations.  Refer to the
   [Avro schema declaration documentation](https://avro.apache.org/docs/current/spec.html#schemas) for
   detailed information.

   ## Primitive types

   * **null**: no value
   * **boolean**: a binary value
   * **int**: 32-bit signed integer
   * **long**: 64-bit signed integer
   * **float**: single precision (32-bit) IEEE 754 floating-point number
   * **double**: double precision (64-bit) IEEE 754 floating-point number
   * **bytes**: sequence of uninterpreted 8-bit unsigned bytes
   * **string**: Unicode character sequence

   ## Complex types

   * **record**: An object with one or more fields defined by name and type
   * **enum**: A value from a finite set of symbolic values
   * **array**: An ordered sequence of values

   ## Any type

    The **Any** type validates for any non-null value.


- name: "Any"
  type: enum
  docParent: "#Datatype"
  symbols: ["#Any"]
  doc: |
    The **Any** type validates for any non-null value.


- name: "JsonldPrefix"
  type: record
  fields:
    - name: "prefix"
      type: "string"
    - name: "namespace"
      type: "string"


- name: "Schema"
  type: record
  doc: "A schema defines an object type."
  validationRoot: true
  fields:
    - name: "name"
      type: ["null", string]
      jsonldPredicate: "@id"

    - name: "type"
      doc: "The data type of this object."
      type:
        - "#Datatype"
        - "#Schema"
        - "string"
        - type: "array"
          items: [ "#Datatype", "#Schema", "string" ]
      jsonldPredicate:
        "@id": "avro:type"
        "@type": "@vocab"

    - name: "fields"
      type:
        - "null"
        - type: "array"
          items: "#Schema"
      jsonldPredicate:
        "@id": "avro:fields"
      doc: "When `type` is `record`, defines the fields of the record."

    - name: "symbols"
      type:
        - "null"
        - type: "array"
          items: "string"
      jsonldPredicate:
        "@id": "sld:symbols"
        "@type": "@id"
        checkedURI: false
      doc: "When `type` is `enum`, defines the set of valid symbols."

    - name: "items"
      type:
        - "null"
        - "#Datatype"
        - "#Schema"
        - "string"
        - type: "array"
          items: [ "#Datatype", "#Schema", "string" ]
      jsonldPredicate:
        "@id": "avro:items"
        "@type": "@vocab"
      doc: "When `type` is `array`, defines the type of the array elements."

    - name: "doc"
      type: ["null", string]

    - name: "docParent"
      type: ["null", string]

    - name: "docAfter"
      type: ["null", string]

    - name: "jsonldPrefix"
      type: ["null", string]

    - name: "jsonldPrefixes"
      type:
        - "null"
        - type: array
          items: "#JsonldPrefix"

    - name: "jsonldVocab"
      type: ["null", string]

    - name: "jsonldPredicate"
      type: ["null", "Any"]

    - name: "extends"
      type: ["null", string]

    - name: "specialize"
      type: ["null", string]

    - name: "validationRoot"
      type: ["null", boolean]
